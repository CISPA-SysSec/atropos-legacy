abstract
&=
array()
(array)
as
&&
||
(bool)
(boolean)
break
callable
case
catch
class
__CLASS__
clone
?> or %>
??
??=
//
#
/*
*/
.=
const
"
'
continue
{$
--
declare
default
__DIR__
/=
do
/** */
${
=>
(real)
(double)
(float)
::
echo
...
else
elseif
empty
" $a"
enddeclare
endfor
endforeach
endif
endswitch
endwhile
eval()
exit or die
extends
__FILE__
final
finally
fn
for
foreach
function
__FUNCTION__
global
goto
__halt_compiler()
if
implements
++
include()
include_once()
instanceof
insteadof
interface
(int) or (integer)
isset()
==
>=
===
!= or <>
!==
<=
__LINE__
list()
123, 012, 0x1ac, etc.
and
or
xor
__METHOD__
-=
%=
*=
namespace
new
__NAMESPACE__
\
"$a[0]"
(object)
->
<?php
<?
<%
<?= or <%=
|=
::
+=
**
**=
print()
private
protected
public
require()
require_once()
return
<<
<<=
<=>
>>
>>=
<<<
static
parent
self
(string)
"${a
switch
throw
trait
__TRAIT__
try
unset()
(unset)
use
var
$foo
while
^=
yield
yield from